{"version":3,"sources":["webpack://react-template/./node_modules/rc-resize-observer/lib/index.js"],"names":["_interopRequireWildcard","_interopRequireDefault","Object","defineProperty","exports","value","default","_objectSpread2","_classCallCheck2","_createClass2","_inherits2","_createSuper2","React","_findDOMNode","_toArray","_warning","_ref","_resizeObserverPolyfill","ReactResizeObserver","_React$Component","_super","_this","this","apply","arguments","resizeObserver","childNode","currentElement","state","width","height","offsetHeight","offsetWidth","onResize","entries","props","target","_target$getBoundingCl","getBoundingClientRect","fixedWidth","Math","floor","fixedHeight","size","setState","Promise","resolve","then","setChildNode","node","key","onComponentUpdated","destroyObserver","disabled","element","observe","disconnect","children","childNodes","length","isValidElement","supportRef","ref","cloneElement","composeRef","map","index","concat","Component","displayName","_default"],"mappings":"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","file":"npm.rc-resize-observer.f63eae7bdc946e03cac6.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _createSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createSuper\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _findDOMNode = _interopRequireDefault(require(\"rc-util/lib/Dom/findDOMNode\"));\n\nvar _toArray = _interopRequireDefault(require(\"rc-util/lib/Children/toArray\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _ref = require(\"rc-util/lib/ref\");\n\nvar _resizeObserverPolyfill = _interopRequireDefault(require(\"resize-observer-polyfill\"));\n\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key'; // Still need to be compatible with React 15, we use class component here\n\nvar ReactResizeObserver = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2.default)(ReactResizeObserver, _React$Component);\n\n  var _super = (0, _createSuper2.default)(ReactResizeObserver);\n\n  function ReactResizeObserver() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ReactResizeObserver);\n    _this = _super.apply(this, arguments);\n    _this.resizeObserver = null;\n    _this.childNode = null;\n    _this.currentElement = null;\n    _this.state = {\n      width: 0,\n      height: 0,\n      offsetHeight: 0,\n      offsetWidth: 0\n    };\n\n    _this.onResize = function (entries) {\n      var onResize = _this.props.onResize;\n      var target = entries[0].target;\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          width = _target$getBoundingCl.width,\n          height = _target$getBoundingCl.height;\n\n      var offsetWidth = target.offsetWidth,\n          offsetHeight = target.offsetHeight;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n\n      var fixedWidth = Math.floor(width);\n      var fixedHeight = Math.floor(height);\n\n      if (_this.state.width !== fixedWidth || _this.state.height !== fixedHeight || _this.state.offsetWidth !== offsetWidth || _this.state.offsetHeight !== offsetHeight) {\n        var size = {\n          width: fixedWidth,\n          height: fixedHeight,\n          offsetWidth: offsetWidth,\n          offsetHeight: offsetHeight\n        };\n\n        _this.setState(size);\n\n        if (onResize) {\n          // defer the callback but not defer to next frame\n          Promise.resolve().then(function () {\n            onResize((0, _objectSpread2.default)((0, _objectSpread2.default)({}, size), {}, {\n              offsetWidth: offsetWidth,\n              offsetHeight: offsetHeight\n            }), target);\n          });\n        }\n      }\n    };\n\n    _this.setChildNode = function (node) {\n      _this.childNode = node;\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(ReactResizeObserver, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyObserver();\n    }\n  }, {\n    key: \"onComponentUpdated\",\n    value: function onComponentUpdated() {\n      var disabled = this.props.disabled; // Unregister if disabled\n\n      if (disabled) {\n        this.destroyObserver();\n        return;\n      } // Unregister if element changed\n\n\n      var element = (0, _findDOMNode.default)(this.childNode || this);\n      var elementChanged = element !== this.currentElement;\n\n      if (elementChanged) {\n        this.destroyObserver();\n        this.currentElement = element;\n      }\n\n      if (!this.resizeObserver && element) {\n        this.resizeObserver = new _resizeObserverPolyfill.default(this.onResize);\n        this.resizeObserver.observe(element);\n      }\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var childNodes = (0, _toArray.default)(children);\n\n      if (childNodes.length > 1) {\n        (0, _warning.default)(false, 'Find more than one child node with `children` in ResizeObserver. Will only observe first one.');\n      } else if (childNodes.length === 0) {\n        (0, _warning.default)(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n        return null;\n      }\n\n      var childNode = childNodes[0];\n\n      if ( /*#__PURE__*/React.isValidElement(childNode) && (0, _ref.supportRef)(childNode)) {\n        var ref = childNode.ref;\n        childNodes[0] = /*#__PURE__*/React.cloneElement(childNode, {\n          ref: (0, _ref.composeRef)(ref, this.setChildNode)\n        });\n      }\n\n      return childNodes.length === 1 ? childNodes[0] : childNodes.map(function (node, index) {\n        if (! /*#__PURE__*/React.isValidElement(node) || 'key' in node && node.key !== null) {\n          return node;\n        }\n\n        return /*#__PURE__*/React.cloneElement(node, {\n          key: \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index)\n        });\n      });\n    }\n  }]);\n  return ReactResizeObserver;\n}(React.Component);\n\nReactResizeObserver.displayName = 'ResizeObserver';\nvar _default = ReactResizeObserver;\nexports.default = _default;"],"sourceRoot":""}