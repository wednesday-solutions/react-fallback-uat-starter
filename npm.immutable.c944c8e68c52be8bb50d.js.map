{"version":3,"sources":["webpack://react-template/./node_modules/immutable/dist/immutable.js"],"names":["module","exports","SLICE$0","Array","prototype","slice","createClass","ctor","superClass","Object","create","constructor","Iterable","value","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","Keyed","Indexed","Set","DELETE","SHIFT","SIZE","MASK","NOT_SET","CHANGE_LENGTH","DID_ALTER","MakeRef","ref","SetRef","OwnerID","arrCopy","arr","offset","len","Math","max","length","newArr","ii","ensureSize","iter","undefined","size","__iterate","returnTrue","wrapIndex","index","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","ITERATE_KEYS","ITERATE_VALUES","ITERATE_ENTRIES","REAL_ITERATOR_SYMBOL","Symbol","iterator","FAUX_ITERATOR_SYMBOL","ITERATOR_SYMBOL","Iterator","next","this","iteratorValue","type","k","v","iteratorResult","done","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","call","isArrayLike","emptySequence","toSeq","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","toString","KEYS","VALUES","ENTRIES","inspect","toSource","of","arguments","__toString","cacheResult","_cache","__iterateUncached","toArray","fn","reverse","seqIterate","__iterator","seqIterator","isSeq","EMPTY_SEQ","EMPTY_REPEAT","EMPTY_RANGE","IS_SEQ_SENTINEL","ArraySeq","array","_array","ObjectSeq","object","keys","_object","_keys","IterableSeq","_iterable","IteratorSeq","_iterator","_iteratorCache","maybeSeq","seq","isArray","TypeError","maybeIndexedSeqFromValue","useKeys","cache","maxIndex","entry","__iteratorUncached","fromJS","json","converter","fromJSWith","fromJSDefault","key","parentJSON","map","isPlainObj","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","a","b","__hash","notAssociative","entries","every","flipped","_","allEqual","bSize","has","get","Repeat","times","_value","Infinity","invariant","condition","error","Error","Range","start","step","abs","_start","_end","_step","ceil","Collection","KeyedCollection","IndexedCollection","SetCollection","notSetValue","hasOwnProperty","iterations","val","includes","searchValue","indexOf","lastIndexOf","this$0","other","possibleIndex","floor","offsetValue","imul","c","d","smi","i32","hash","o","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","string","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","obj","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","set","isExtensible","defineProperty","apply","nodeType","e","node","uniqueID","documentElement","WeakMap","assertNotInfinite","Map","emptyMap","isMap","withMutations","forEach","maybeMap","IS_MAP_SENTINEL","keyValues","i","_root","updateMap","setIn","keyPath","updateIn","remove","deleteIn","update","updater","updatedValue","updateInDeepMap","forceIterator","clear","__ownerID","__altered","merge","mergeIntoMapWith","mergeWith","merger","mergeIn","iters","m","mergeDeep","deepMerger","mergeDeepWith","deepMergerWith","mergeDeepIn","sort","comparator","OrderedMap","sortFactory","sortBy","mapper","mutable","asMutable","wasAltered","__ensureOwner","asImmutable","MapIterator","iterate","ownerID","makeMap","EMPTY_MAP","MapPrototype","ArrayMapNode","BitmapIndexedNode","bitmap","nodes","HashArrayMapNode","count","HashCollisionNode","keyHash","ValueNode","_type","_reverse","_stack","mapIteratorFrame","mapIteratorValue","prev","__prev","root","newRoot","newSize","didChangeSize","didAlter","updateNode","shift","isLeafNode","mergeIntoNode","newNode","idx1","idx2","createNodes","packNodes","excluding","packedII","packedNodes","bit","expandNodes","including","expandedNodes","iterables","push","mergeIntoCollectionWith","existing","nextValue","collection","filter","x","mergeIntoMap","keyPathIter","isNotSet","existingValue","newValue","nextExisting","nextUpdated","popCount","idx","canEdit","newArray","spliceIn","newLen","after","spliceOut","pop","removeIn","removed","exists","MAX_ARRAY_MAP_SIZE","isEditable","newEntries","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","newBitmap","newNodes","newCount","MIN_HASH_ARRAY_MAP_SIZE","keyMatch","stack","subNode","List","empty","emptyList","isList","makeList","VNode","list","setSize","maybeList","IS_LIST_SENTINEL","listNodeFor","_origin","updateList","splice","insert","_capacity","_level","_tail","values","oldSize","setListBounds","unshift","mergeIntoListWith","iterateList","DONE","ListPrototype","removeBefore","level","originIndex","newChild","removingFirst","oldChild","editable","editableVNode","removeAfter","sizeIndex","EMPTY_LIST","EMPTY_ORDERED_MAP","left","right","tailPos","getTailOffset","tail","iterateNodeOrLeaf","iterateLeaf","iterateNode","from","to","origin","capacity","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","beginIndex","maxSize","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","updateOrderedMap","newMap","newList","flip","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","flipFactory","flipSequence","makeSequence","reversedSequence","cacheResultThrough","mapFactory","context","mappedSequence","reverseFactory","filterFactory","predicate","filterSequence","countByFactory","grouper","groups","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","resolvedSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","concat","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","stopped","flatDeep","currentDepth","flatMapFactory","interposeFactory","separator","interposedSequence","defaultComparator","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","validateEntry","resolveSize","Record","defaultValues","name","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","valueSeq","indexedIterable","recordName","defaultVal","_empty","makeRecord","likeRecord","record","getPrototypeOf","names","setProp","bind","emptySet","isSet","add","maybeSet","IS_SET_SENTINEL","fromKeys","keySeq","updateSet","union","intersect","originalSet","subtract","OrderedSet","__make","EMPTY_SET","SetPrototype","__empty","makeSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","EMPTY_ORDERED_SET","OrderedSetPrototype","makeOrderedSet","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","head","_head","peek","makeStack","pushAll","EMPTY_STACK","StackPrototype","mixin","methods","keyCopier","getOwnPropertySymbols","toJS","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","join","returnValue","find","findEntry","sideEffect","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","not","butLast","isEmpty","countBy","entriesSequence","entryMapper","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","keyOf","keyMapper","last","lastKeyOf","maxBy","neg","defaultNegComparator","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","hashIterable","IterablePrototype","quoteString","chain","contains","mapEntries","mapKeys","KeyedIterablePrototype","JSON","stringify","String","defaultZipper","ordered","keyed","murmurHashOfSize","hashMerge","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","zipWith","factory"],"mappings":"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","file":"npm.immutable.c944c8e68c52be8bb50d.js","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));"],"sourceRoot":""}